use Rex -feature => ['1.14', 'exec_autodie'];
use Rex::Logger;

our $HOME = $ENV{HOME};
our $DOT = "$HOME/git/rexfiles/dotfiles";

sub ensure_dir {
  my ($src_glob, $dst_dir, $file_mode) = @_;

  file $dst_dir,
    ensure => 'directory',
    mode => '0700';

  file "$dst_dir/" . basename($_),
    ensure => 'present',
    source => $_,
    mode => $file_mode // '0640'
      for glob $src_glob;
}

sub ensure_file {
  my ($src_file, $dst_file, $file_mode) = @_;

  file $dst_file, ensure => 'present',
    source => $src_file,
    mode => $file_mode // '0640';
}

sub ensure {
  my ($src, $dst, $mode) = @_;
  ($dst =~ /\/$/ ? \&ensure_dir : \&ensure_file)->($src, $dst, $mode);
}

desc 'Install packages on Termux';
task 'pkg_termux', sub {
  my @pkgs = qw/
    ack-grep
    ctags
    fzf
    golang
    htop
    make
    neovim
    nodejs
    ripgrep
    rsync
    ruby
    starship
    tig
    zsh
  /;

  for my $pkg (@pkgs) {
    Rex::Logger::info("Installing package $pkg");
    pkg $pkg, ensure => 'installed';
  }
};

desc 'Install packages on FreeBSD';
task 'pkg_freebsd', sub {
  my @pkgs = qw/
    bat
    ctags
    fzf
    gmake
    go
    gron
    htop
    lynx
    neovim
    node
    p5-ack
    ripgrep
    starship
    tig
    tmux
    zsh
  /;

  for my $pkg (@pkgs) {
    Rex::Logger::info("Installing package $pkg");
    pkg $pkg, ensure => 'installed';
  }
};

desc 'Install packages on Fedora Linux';
task 'pkg_fedora', sub {
  my @pkgs = qw/
    ack
    bat
    ctags
    exa 
    fzf 
    golang 
    golang-x-tools-gopls 
    gpaste 
    gron 
    htop 
    java-latest-openjdk-devel 
    lynx 
    make 
    neovim 
    nextcloud-client 
    nodejs 
    perl-File-Slurp
    procs 
    rakudo 
    Rex 
    ripgrep 
    ruby 
    strace 
    task
    tig 
    tmux 
    zsh 
    dialect
    chromium
    strawberry
    gnumeric
    tuba
    zathura
  /;

  for my $pkg (@pkgs) {
    Rex::Logger::info("Installing package $pkg");
    pkg $pkg, ensure => 'installed';
  }
};

desc 'Install ~/.config/helix';
task 'home_helix', sub { ensure "$DOT/helix/*" => "$HOME/.config/helix/" };

desc 'Install ~/scripts';
task 'home_scripts', sub { ensure "$DOT/scripts/*" => "$HOME/scripts/", '0750' };

desc 'Install ~/.ssh files';
task 'home_ssh', sub { ensure "$DOT/ssh/config" => "$HOME/.ssh/config", '0600' };

desc 'Install ZSH configuration';
task 'home_zsh', sub {
  ensure "$DOT/zsh/zshrc" => "$HOME/.zshrc";
  ensure "$DOT/zsh/zshrc_d/*" => "$HOME/.zshrc_d/";
};

desc 'Vale and proselint';
task 'home_vale', sub {
  ensure "$DOT/vale.ini" => "$HOME/.vale.ini";
  say 'Now you can run "vale sync"';
};

desc 'Install tmux configuration';
task 'home_tmux', sub {
  ensure "$DOT/tmux/tmux.local.conf" => "$HOME/.tmux.local.conf";
  ensure "$DOT/tmux/tmux.conf" => "$HOME/.tmux.conf";
};

desc 'Install my signature';
task 'home_signature', sub {
  ensure "$DOT/signature" => "$HOME/.signature";
};

desc 'Install all my ~ files';
task 'home', sub {
  home_helix();
  home_scripts();
  home_ssh();
  home_vale();
  home_zsh();
  home_tmux();
  home_signature();
};
