theme = "noctis"

[editor]
bufferline = "always"
rulers = [80, 100, 120, 140]
line-number = "relative"
mouse = true
    
[editor.statusline]
left = ["mode", "spinner", "file-name", "position", "version-control"]
center = ["diagnostics"]
right = ["selections", "file-encoding", "file-line-ending", "file-type"]

[editor.lsp]
display-messages = true

[editor.cursor-shape]
normal = "block"
insert = "underline"
select = "bar"

[editor.whitespace.render]
space = "none"
tab = "none"
newline = "none"

[keys.normal]
D = ["ensure_selections_forward", "extend_to_line_end"]
S = ["ensure_selections_forward", "extend_to_line_start"]

C-c = "yank_main_selection_to_clipboard"
C-v = { b = "paste_clipboard_before", a = "paste_clipboard_after", r = ":clipboard-paste-replace" }
A-c = "toggle_comments" # Was originally C-c, so mapped to ALT now

# Helix related helpers
C-h = { c = ":config-open", r = ":config-reload", C = ":run-shell-command cp -v ~/.config/helix/config.toml ~/git/rexfiles/dotfiles/helix/config.toml", l = ":open ~/.config/helix/languages.toml", h = ":open ~/Notes/Linux-and-Unix-Tricks/Helix.md" }

# Various helpers
C-s = { e = ":set-option soft-wrap.enable true", d = ":set-option soft-wrap.enable false", s = "save_selection" }

# Buffer stuff
C-q = ":buffer-close"

# AI minor mode
[keys.normal.A]
c = ":pipe chatgpt correct this sentence and only print out the corrected text"
r = ":pipe chatgpt restructure and reword the input and dont leave information out and only print out the new text" 

# Git minor mode
[keys.normal.G]
d = ":run-shell-command git diff"
p = ":run-shell-command git pull"
u = ":run-shell-command git push"
t = ":run-shell-command tmux new-window -n hx-git-tig tig"
c = ":run-shell-command tmux split-window -v 'git commit -a'"

# Build minor mode
[keys.normal.B]
m = ":run-shell-command make"
d = ":run-shell-command go-task dev"
